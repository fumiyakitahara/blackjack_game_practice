// ページの読み込みが完了したとき実行する関数を登録
window.addEventListener("load", 初期表示);

// 「カードを引く」ボタンを押したとき実行する関数を登録
document.querySelector("#pick").addEventListener("click", カードを引く);

// 「勝負する！」ボタンを押したとき実行する関数を登録
document.querySelector("#judge").addEventListener("click", 勝負する);

// 「もう1回遊ぶ」ボタンを押したとき実行する関数を登録
document.querySelector("#reset").addEventListener("click", もう1回遊ぶ);

// ページの読み込みが完了したとき実行する関数
function 初期表示() {
    // シャッフル
    // 自分がカードを引く
    // 相手がカードを引く
    // 画面を更新する
  }

// カードの山をシャッフルする関数
function シャッフル() {
    for (100回繰り返す) {
      // カードの山からランダムに選んだ2枚を入れ替える
    }
  }

// 自分がカードを引く関数
function 自分がカードを引く() {
    if (自分のカードの枚数が4枚以下) {
      // カードの山（配列）から1枚取り出す
      // 取り出した1枚を自分のカード（配列）に追加する
    }
  }

  // 相手がカードを引く関数
function 相手がカードを引く() {
    if (相手のカードの枚数が4枚以下) {
      if (考える) {
        // カードの山（配列）から1枚取り出す
        // 取り出した1枚を相手のカード（配列）に追加する
      }
    }
  }
  
// カードを引くかどうか考える関数
function 考える() {
    // 引くか引かないかを戻り値で返す
  }

// 画面の表示を更新する関数
function 画面を更新する() {
  // 自分のカードを表示する
  for (iを5回繰り返す) {
    if (自分のカードの枚数がiより大きい) {
      // 表面の画像を表示する
    } else {
      // 裏面の画像を表示する
    }
  }
  // 相手のカードを表示する
  for (iを5回繰り返す) {
    if (相手のカードの枚数がiより大きい) {
      // 表面の画像を表示する
    } else {
      // 裏面の画像を表示する
    }
  }
  // カードの合計を再計算する
}